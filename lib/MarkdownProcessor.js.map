{"version":3,"sources":["../src/MarkdownProcessor.js"],"names":[],"mappings":";AACA;;;;;;;;AACA;;;;IACqB,iB;AACjB,+BAAY,MAAZ,EAAoB;AAAA;;AAChB,aAAK,MAAL,GAAc,MAAd;AACH;;;;kCAeS,G,EAAK;AACX,mBAAO;AACH,0BADG,sBACQ,IADR,EACc,QADd,EACwB;AACvB,2BAAO,0BAAM,IAAN,CAAP;AACH,iBAHE;AAIH,2BAJG,uBAIS,QAJT,EAImB,QAJnB,EAI6B;AAC5B,2BAAO;AACH,0CADG;AAEH,kCAAU,WAAW,QAAX,GAAsB;AAF7B,qBAAP;AAIH;AATE,aAAP;AAWH;;;8CAzB4B;AACzB,mBAAO,CACH,KADG,EAEH,WAFG,EAGH,QAHG,EAIH,OAJG,EAKH,MALG,EAMH,OANG,EAOH,SAPG,EAQH,MARG,CAAP;AAUH;;;;;;kBAhBgB,iB","file":"MarkdownProcessor.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport {parse} from \"markdown-to-ast\";\nexport default class MarkdownProcessor {\n    constructor(config) {\n        this.config = config;\n    }\n\n    static availableExtensions() {\n        return [\n            \".md\",\n            \".markdown\",\n            \".mdown\",\n            \".mkdn\",\n            \".mkd\",\n            \".mdwn\",\n            \".mkdown\",\n            \".ron\"\n        ];\n    }\n\n    processor(ext) {\n        return {\n            preProcess(text, filePath) {\n                return parse(text);\n            },\n            postProcess(messages, filePath) {\n                return {\n                    messages,\n                    filePath: filePath ? filePath : \"<markdown>\"\n                };\n            }\n        };\n    }\n}\n"]}